{"version":3,"sources":["Events.js","components/Login.js","components/MessageInput.js","components/MessageBox.js","components/ServerMessage.js","components/ChatContainer.js","components/NavBar.js","components/WhiteBoard.js","components/ToolBar.js","components/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","GLOBAL_CHAT","USER_CONNECTED","MESSAGE_RECIEVED","MESSAGE_SENT","USER_DISCONNECTED","TYPING","VERIFY_USER","LOGOUT","LINEDRAWN","Login","props","state","username","error","handleChange","bind","handleSubmit","setUser","user","isUser","this","setError","message","setState","console","log","e","target","value","preventDefault","socket","emit","className","onSubmit","type","placeholder","onChange","Component","MessageInput","sendMessage","input","focus","ref","ele","MessageBox","highlight","includes","name","style","backgroundColor","sender","ServerMessage","ChatContainer","chatMessages","addMessage","autoScr","on","newList","push","messageBox","scrollTop","scrollHeight","messageBlock","map","key","id","chat","NavBar","require","WhiteBoard","resizeCanvas","cw","d","offsetWidth","ch","offsetHeight","canvas","width","height","drawLine","ratio","ctx","x1","y1","x2","y2","moveTo","lineTo","stroke","handleDraw","startX","startY","currentX","currentY","trackMouse","nativeEvent","offsetX","offsetY","startTrackMouse","drawing","setInterval","stopTrackMouse","clearInterval","getContext","window","addEventListener","onMouseDown","onMouseLeave","onMouseUp","onMouseMove","ToolBar","Layout","setCanvas","initSocket","io","App","title","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.ece5dee4.chunk.js","sourcesContent":["module.exports = {\r\n    GLOBAL_CHAT: \"GLOBAL_CHAT\",\r\n    USER_CONNECTED: \"USER_CONNECTED\",\r\n    MESSAGE_RECIEVED: \"MESSAGE_RECIEVED\",\r\n    MESSAGE_SENT: \"MESSAGE_SENT\",\r\n    USER_DISCONNECTED: \"USER_DISCONNECTED\",\r\n    TYPING: \"TYPING\",\r\n    VERIFY_USER: \"VERIFY_USER\",\r\n    LOGOUT: \"LOGOUT\",\r\n    LINEDRAWN: \"LINEDRAWN\"\r\n}","import React, { Component }from 'react'\r\nimport { VERIFY_USER } from '../Events.js';\r\n\r\nclass Login extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            username: \"\",\r\n            error: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n        this.setUser = this.setUser.bind(this);\r\n    }\r\n\r\n    setUser({user, isUser}){\r\n        if(isUser){\r\n            this.setError(\"Username is taken.\");\r\n        } else {\r\n            this.props.setUser(user);\r\n        }\r\n    }\r\n\r\n    //Replace with a window alert component later\r\n    setError(message){\r\n        this.setState({\r\n            error: message\r\n        });\r\n        console.log(message);\r\n    }\r\n\r\n    handleChange(e){\r\n        const username = e.target.value\r\n        this.setState({\r\n            username: username\r\n        })\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        const socket = this.props.socket;\r\n\r\n        socket.emit(VERIFY_USER, this.state.username, this.setUser);\r\n        console.log(VERIFY_USER, this.state.username);\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"loginForm\">\r\n                <form onSubmit = {this.handleSubmit}>\r\n                    <label className=\"loginText\">Enter Username</label>\r\n                    <input\r\n                    type = \"text\"\r\n                    value = {this.state.username}\r\n                    placeholder = \"Username\"\r\n                    onChange = {this.handleChange}\r\n                    className=\"loginUser\"\r\n\r\n                    />\r\n                    <input\r\n                    type = \"submit\"\r\n                    value = \"Login\"\r\n                    className=\"loginSubmit\"\r\n                    />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Login","import React, { Component } from 'react'\r\n\r\nclass MessageInput extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            message: \"\",\r\n        }\r\n        this.handleChange = this.handleChange.bind(this);\r\n        this.handleSubmit = this.handleSubmit.bind(this);\r\n    }\r\n\r\n    //Need chat.name\r\n    //Need sendMessage\r\n\r\n    handleChange(e){\r\n        const message = e.target.value;\r\n        this.setState({\r\n            message: message\r\n        });\r\n    }\r\n\r\n    handleSubmit(e){\r\n        e.preventDefault();\r\n        const message = this.state.message;\r\n        if(message !== \"\"){\r\n            this.props.sendMessage(message);\r\n            this.setState({\r\n                message: \"\"\r\n            });\r\n        }\r\n\r\n        this.input.focus();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.handleSubmit}> \r\n                    <input className=\"messageInput\"\r\n                        type = \"text\" \r\n                        value = {this.state.message} \r\n                        placeholder = \"Type here to chat!\" \r\n                        onChange = {this.handleChange}\r\n                        ref={(ele) => this.input = ele}\r\n                    />\r\n                    <input \r\n                        type = \"submit\" \r\n                        value = \"Send\"\r\n                        className=\"messageSend\"\r\n                        />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageInput","import React, { Component } from 'react'\r\n\r\nclass MessageBox extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n    //Need messages\r\n\r\n    render() {\r\n        let highlight = this.props.message.includes(\"@\"+this.props.user.name)\r\n\r\n        return (\r\n        <div style={{backgroundColor: highlight ? \"rgb(25, 9, 42)\" : \"none\"}}>\r\n                {/* <hr className=\"messageBreak\"/> */}\r\n                <span className=\"username\">\r\n                    {this.props.sender.name}\r\n                </span>\r\n                <span className=\"message\">\r\n                    {\": \" + this.props.message}\r\n                </span>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default MessageBox","import React, { Component } from 'react'\r\n\r\nclass ServerMessage extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"serverMessage\">\r\n                {this.props.message}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ServerMessage","import React, { Component } from 'react'\r\nimport MessageInput from './MessageInput.js'\r\nimport { MESSAGE_SENT, MESSAGE_RECIEVED } from '../Events.js'\r\nimport MessageBox from './MessageBox.js'\r\nimport ServerMessage from './ServerMessage.js';\r\n\r\nclass ChatContainer extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        //socket\r\n        //user\r\n\r\n        this.state = {\r\n            chatMessages: []\r\n        }\r\n        this.sendMessage = this.sendMessage.bind(this);\r\n        this.addMessage = this.addMessage.bind(this);\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.addMessage();\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        this.autoScr()\r\n    }\r\n    \r\n    //Chat Box with messages\r\n\r\n    //Chat input\r\n\r\n    //Typing indicator\r\n\r\n    //\r\n\r\n    //Send Message\r\n    sendMessage(message){\r\n        const socket = this.props.socket;\r\n        const user = this.props.user;\r\n        socket.emit(MESSAGE_SENT, message, user);\r\n        // console.log(MESSAGE_SENT, \" : \", message);\r\n    }\r\n\r\n    //Recieve Message\r\n    addMessage(){\r\n        const socket = this.props.socket;\r\n        socket.on(MESSAGE_RECIEVED, (message) =>{\r\n            const newList = this.state.chatMessages\r\n            newList.push(message);\r\n            this.setState({\r\n                chatMessages: newList\r\n            })\r\n            // console.log(this.state.chatMessages)\r\n        });\r\n    }\r\n\r\n    //Change scroll \r\n    autoScr(){\r\n        this.messageBox.scrollTop = this.messageBox.scrollHeight\r\n    }\r\n\r\n\r\n    render() {\r\n        const messageBlock = this.state.chatMessages.map(message => (\r\n            message.sender.name === 'server' ?\r\n            <ServerMessage\r\n                key = {message.id}\r\n                message = {message.message}\r\n            /> :\r\n            <MessageBox\r\n                key = {message.id}\r\n                message = {message.message}\r\n                sender = {message.sender}\r\n                user = {this.props.user}\r\n            /> \r\n\r\n\r\n        ));\r\n\r\n\r\n        return (\r\n            <div>\r\n                <MessageInput\r\n                    chat = {this.state}\r\n                    sendMessage = {this.sendMessage}\r\n                />\r\n                <div className=\"messageBox\" ref={(ele) => this.messageBox = ele}>\r\n                    {messageBlock}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ChatContainer","import React, { Component } from 'react'\r\n\r\nclass NavBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"navBar\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default NavBar","import React, { Component } from 'react'\r\nconst { LINEDRAWN } = require(\"../Events.js\")\r\n\r\nclass WhiteBoard extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        // Set canavs context\r\n        this.ctx = this.canvas.getContext(\"2d\")\r\n\r\n        // Get size from parent div\r\n        const cw = this.d.offsetWidth;\r\n        const ch = this.d.offsetHeight;\r\n\r\n        // Set canvas attribute size\r\n        this.canvas.width = cw\r\n        this.canvas.height = ch\r\n\r\n        // Set canvas styles size\r\n        this.canvas.style.width = cw + \"px\"\r\n        this.canvas.style.height = ch + \"px\"\r\n        \r\n        const socket = this.props.socket\r\n        socket.on(LINEDRAWN, this.drawLine)\r\n        \r\n        window.addEventListener(\"resize\", this.resizeCanvas, false)\r\n    }\r\n\r\n    // Canvas size needs to be updated\r\n    resizeCanvas = () => {\r\n        // Todo: Try taking a snapshot of the canvas and resize to new canvas\r\n\r\n        // Get new size from resized parent div\r\n        const cw = this.d.offsetWidth;\r\n        const ch = this.d.offsetHeight;\r\n\r\n        // Set canvas attributes to new size\r\n        this.canvas.width = cw;\r\n        this.canvas.height = ch;\r\n        \r\n        // Set canvas styles to new size\r\n        this.canvas.style.width = cw + \"px\";\r\n        this.canvas.style.height = ch + \"px\";\r\n    }\r\n\r\n    // Draw Line\r\n    drawLine = (ratio) => {\r\n        const ctx = this.ctx;\r\n\r\n        const cw = this.canvas.width;\r\n        const ch = this.canvas.height;\r\n\r\n        const x1 = ratio.x1 * cw;\r\n        const y1 = ratio.y1 * ch;\r\n        const x2 = ratio.x2 * cw;\r\n        const y2 = ratio.y2 * ch;\r\n\r\n        ctx.moveTo(x1,y1);\r\n        ctx.lineTo(x2,y2);\r\n        ctx.stroke();\r\n    }\r\n\r\n    handleDraw = () => {\r\n        const socket = this.props.socket;\r\n\r\n        const cw = this.canvas.width;\r\n        const ch = this.canvas.height;\r\n\r\n        const ratio = {\r\n            x1: this.startX/cw,\r\n            y1: this.startY/ch,\r\n            x2: this.currentX/cw,\r\n            y2: this.currentY/ch,\r\n        };\r\n        this.startX = this.currentX;\r\n        this.startY = this.currentY;\r\n        socket.emit(LINEDRAWN, ratio);\r\n    }\r\n\r\n    // Track Mouse Movement\r\n    trackMouse = (e) => {\r\n        // Used nativeEvent because some mouse events don't return offset\r\n        this.currentX = e.nativeEvent.offsetX;\r\n        this.currentY = e.nativeEvent.offsetY;\r\n    }\r\n\r\n    // Starts the drawing process\r\n    startTrackMouse = () => {\r\n        this.startX = this.currentX;\r\n        this.startY = this.currentY;\r\n        this.drawing = setInterval(this.handleDraw, 20);\r\n    }\r\n\r\n    // Stops the drawing process\r\n    stopTrackMouse = () => {\r\n        clearInterval(this.drawing);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"whiteBoard\" ref={(ele) => this.d = ele}>\r\n                <canvas \r\n                    ref={(ele) => this.canvas = ele}\r\n                    onMouseDown={this.startTrackMouse}\r\n                    onMouseLeave={this.stopTrackMouse}\r\n                    onMouseUp={this.stopTrackMouse}\r\n                    onMouseMove={this.trackMouse}\r\n                > </canvas>\r\n            </div>\r\n            \r\n        )\r\n    }\r\n}\r\n\r\nexport default WhiteBoard","import React, { Component } from 'react'\r\n\r\nclass ToolBar extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            \r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"toolBar\">\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ToolBar","import React, { Component } from 'react'\r\nimport io from 'socket.io-client'\r\nimport { USER_CONNECTED, LOGOUT  } from '../Events.js'\r\nimport Login from \"./Login.js\"\r\nimport ChatContainer from './ChatContainer.js'\r\nimport NavBar from './NavBar.js';\r\nimport WhiteBoard from './WhiteBoard.js';\r\nimport ToolBar from './ToolBar.js';\r\n\r\nconst socketUrl = \"/\"\r\n// const socketUrl = \"http://localhost:3001\"\r\n\r\nclass Layout extends Component {\r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state = {\r\n            socket: null,\r\n            user: null,\r\n        };\r\n\r\n        this.setUser = this.setUser.bind(this);\r\n        this.setCanvas = this.setCanvas.bind(this);\r\n    }\r\n\r\n    //Initialises socket\r\n    componentDidMount() {\r\n        this.initSocket()\r\n    }\r\n\r\n    //Leave page ???\r\n    componentWillUnmount() {\r\n        //const socket = this.state.socket;\r\n        //socket.emit(\"disconnect\", (this.user))\r\n    }\r\n\r\n    //Create a socket connection with server\r\n    initSocket(){\r\n        const socket = io(socketUrl)\r\n        \r\n        socket.on(\"connect\", () => {\r\n            console.log(\"Connected\")\r\n        })\r\n        this.setState({socket: socket})\r\n    }\r\n\r\n    //Set User\r\n    setUser(user){\r\n        const socket = this.state.socket\r\n        \r\n        socket.emit(USER_CONNECTED, user)\r\n        console.log(USER_CONNECTED);\r\n        this.setState({\r\n            user: user\r\n        })\r\n    }\r\n\r\n    //Logout\r\n    logout(){\r\n        const socket = this.state.socket;\r\n        const user = this.state.user;\r\n\r\n        //For future proofing check to see if user is logged in\r\n        if(user == null){\r\n            //Error message container???\r\n        } else {\r\n            socket.emit(LOGOUT, user)\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        const user = this.state.user\r\n        const socket = this.state.socket\r\n        \r\n        return (\r\n            <div>\r\n                <NavBar />\r\n                {user ? \r\n                    <div>\r\n                        <WhiteBoard socket = {socket}/>\r\n                        <ToolBar />\r\n                        <ChatContainer socket = {socket} user = {user}/>\r\n                    </div> :\r\n                    <Login socket = {socket} setUser = {this.setUser}/>\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Layout","import React, { Component } from 'react'\nimport Layout from \"./components/Layout\"\n\nclass App extends Component {\n  render() {\n    return (\n      <Layout title = \"Chat App Title\"/>\n    )\n  }\n}\n\nexport default App","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}